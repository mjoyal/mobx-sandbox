import { enumeration, model, compose, custom, reference, safeReference, union, optional, literal, maybe, maybeNull, refinement, map, array, frozen, late, snapshotProcessor } from "mobx-state-tree/dist/internal";
export declare const types: {
    enumeration: typeof enumeration;
    model: typeof model;
    compose: typeof compose;
    custom: typeof custom;
    reference: typeof reference;
    safeReference: typeof safeReference;
    union: typeof union;
    optional: typeof optional;
    literal: typeof literal;
    maybe: typeof maybe;
    maybeNull: typeof maybeNull;
    refinement: typeof refinement;
    string: import("mobx-state-tree/dist/internal").ISimpleType<string>;
    boolean: import("mobx-state-tree/dist/internal").ISimpleType<boolean>;
    number: import("mobx-state-tree/dist/internal").ISimpleType<number>;
    integer: import("mobx-state-tree/dist/internal").ISimpleType<number>;
    Date: import("mobx-state-tree/dist/internal").IType<number | Date, number, Date>;
    map: typeof map;
    array: typeof array;
    frozen: typeof frozen;
    identifier: import("mobx-state-tree/dist/internal").ISimpleType<string>;
    identifierNumber: import("mobx-state-tree/dist/internal").ISimpleType<number>;
    late: typeof late;
    undefined: import("mobx-state-tree/dist/internal").ISimpleType<undefined>;
    null: import("mobx-state-tree/dist/internal").ISimpleType<null>;
    snapshotProcessor: typeof snapshotProcessor;
};
